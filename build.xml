<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="VirtMus" basedir=".">
    <description>Builds the module suite VirtMus.</description>
    <import file="nbproject/build-impl.xml"/>

    <!--
        To automatically update the application version in the title bar.
        Must be executed manually before executing the build-zip target.
    -->
    <target name="update-version-string" depends="-init,branding,release">
        <propertyfile
            file="${basedir}/branding/core/core.jar/org/netbeans/core/startup/Bundle.properties" 
            comment="Updated by build script">
            <entry key="currentVersion" value="${app.title} ${app.version}" />
        </propertyfile>
     
        <propertyfile
            file="${basedir}/branding/modules/org-netbeans-core-windows.jar/org/netbeans/core/windows/view/ui/Bundle.properties"
            comment="Updated by build script">
            <entry key="CTL_MainWindow_Title" value="${app.title} ${app.version}" />
            <entry key="CTL_MainWindow_Title_No_Project" value="${app.title} ${app.version}" />
        </propertyfile>
     
        <propertyfile
            file="${basedir}/branding/modules/org-netbeans-core.jar/org/netbeans/core/ui/Bundle.properties" 
            comment="Updated by build script">
            <entry key="LBL_ProductInformation" value="${app.title}" />
        </propertyfile>
     
    </target>

    <!--
        Run this target to populate dist/virtmus with the same files and config as a full install.
        The app can then be tested from dist/virtmus without doing an install.
    -->
    <target name="build-dist" depends="build-zip" description="Adds VirtMus specific changes">
        <delete dir="dist/${app.name}"/>
        <unzip src="dist/${app.name}.zip" dest="dist"/>

        <!-- Copy our own virtmus.exe which has the virtmus icon in it -->
        <copy file="Installer/BrandedExe/virtmus.exe" tofile="dist/${app.name}/bin/virtmus.exe" overwrite="true"/>

        <!-- Need to modify the app.conf file to allow for more memory -->
        <copy file="${harness.dir}/etc/app.conf" tofile="dist/${app.name}/etc/${app.name}.conf" overwrite="true">
            <filterchain>
                <replaceregex pattern="\s*default_options.*" replace="default_options=&quot;--branding virtmus -J-Xms128m -J-Xmx512m -J-Dsun.java2d.d3d=false&quot;"/>
                <!-- replaceregex pattern="^#\s*jdkhome=.*" replace="jdkhome=&quot;/usr/local/jdk1.6.0&quot;"/ -->
            </filterchain>
        </copy>

        <!-- Need to modify shell scripts to use UNIX (LF) line terminations -->
        <fixcrlf srcDir="dist/${app.name}/etc" includes="${app.name}.conf" eof="remove" eol="unix"/>

        <echo message="Adding the VirtMus documentation files"/>
        <copy todir="dist/${app.name}/Docs" >
            <fileset dir="Docs">
                <exclude name="**/src/**"/>
            </fileset>
        </copy>
    </target>

    <target name="create-installer-zip" depends="build-dist" description="Creates a ZIP distribution">
        <zip destfile="Installer/${app.distname}-${app.version}.zip">
            <zipfileset dir="dist/${app.name}" prefix="${app.distname}-${app.version}"/>
        </zip>
    </target>


    <target name="create-installer-exe" depends="create-installer-zip"
        description="Creates a Windows exe installer using NSIS">
        <echo message="Exit NSIS to continue"/>
        <exec dir="Installer" executable="C:/Program Files (x86)/NSIS/makensisw.exe"
            osfamily="Windows" failonerror="true">
            <arg line="VirtMus.nsi"/>
        </exec>      
    </target>


    <target name="create-installers" depends="create-installer-exe"
        description="Creates exe and zip application installers">
    </target>

    <target name="javadoc-all" depends="-init" description="Build javadoc for several modules in the suite.">
        <property name="platformjars" value="${nbplatform.active.dir}/platform/modules/*;${nbplatform.active.dir}/platform/lib/*;${nbplatform.active.dir}/ide/modules/*;${nbplatform.active.dir}/apisupport/modules/*"/>
        <javadoc destdir="JavaDoc/" packagenames="com.ebixio.*,org.icepdf.*" encoding="UTF-8"
            classpath="${platformjars};${netbeans.dynamic.classpath}">
            <doctitle>
                <![CDATA[<h1>VirtMus JavaDoc</h1>]]>
            </doctitle>

            <classpath>
                <path path="${javac.classpath}"/>
                <path path="ICEpdf/dist/ICEpdf.jar"/>
                <path path="PDFRenderer/release/modules/ext/*"/>
                <path path="jai_java/release/modules/ext/*"/>
                <path path="XStream/release/modules/ext/*"/>
                <path path="TimingFramework/release/modules/ext/*"/>
                <path path="JOGL-Win/release/modules/ext/*"/>
                <path path="colorchooser/release/modules/ext/*"/>
                <path path="swingfx/release/modules/ext/*"/>
                <path path="batik/release/modules/ext/*"/>
            </classpath>

            <group title="VirtMus Module" packages="com.ebixio.virtmus*"/>
            <group title="Annotations Module" packages="com.ebixio.annotations*"/>
            <group title="Thumbnail Viewer Module" packages="com.ebixio.thumbviewer*"/>
            <group title="ICEpdf" packages="org.icepdf.*"/>

            <sourcepath location="Annotations/src"/>
            <sourcepath location="ThumbViewer/src"/>
            <sourcepath location="VirtMus/src"/>
            <sourcepath location="ICEpdf/icepdf/core"/>
            <sourcepath location="JAI/src"/>

            <header>VirtMus Java Docs</header>
            <bottom><![CDATA[<i>Copyright &#169; 2006-2014 Gabriel Burca. All Rights Reserved.</i>]]></bottom>

        </javadoc>
        <nbbrowse file="JavaDoc/index.html"/>
    </target>

    
</project>
